import math

# Parameters
r_photo = 0.017  # efficiency of photosynthesis
r_auto = 0.3     # autotrophic respiration ratio
d_algae = 1.0    # relative algal density
k = 0.15       # light attenuation coefficient (m⁻¹)
enthalpy = 17284 # J/g cellulose
depth = 10       # actual lake depth in meters

# Define irradiance function (bell-shaped over 24h)
def I(t):
    return max(0, 600 * math.sin(math.pi * (t - 6)/14))

# Integrate over 24h (mid-point rule)
dt = 3600  # 1 hour in seconds
irradiance_total = sum(I(h + 0.5) * dt for h in range(24))

# Compute Zeu
zeu = 3 / k
effective_depth = min(zeu, depth)

# Integrate light up to effective depth
light_integral = (1 - math.exp(-k * effective_depth)) / k

# GPP and NPP
gpp_energy = d_algae * irradiance_total * light_integral * r_photo
gpp_mass = gpp_energy / enthalpy
npp_mass = gpp_mass * (1 - r_auto)

print(f"NPP (depth-limited): {round(npp_mass, 2)} g/m²")
